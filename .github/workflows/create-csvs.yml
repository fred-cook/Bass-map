name: Generate Bass map CSVs

on:
  workflow_dispatch:
  schedule:
    # Run daily at 8am
    - cron: "0 8 * * *"

permissions:
  contents: write  # needed for pushing changes

jobs:
  generate-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      # 2. Setup Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # 3. Install dependencies
      - name: Install dependencies
        run: pip install uv

      # 4. Load the Google maps secret api key
      - name: Get API token
        run: echo "GOOGLE_MAPS_API=${{ secrets.GOOGLE_MAPS_API }}" >> $GITHUB_ENV

      # 5. Run the pub location finding script
      - name: Generate CSVs
        run: uv run python main.py

      # 6. Upload CSVs as workflow artifacts
      - name: Upload CSVs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: csv-outputs
          path: pub_locations/*.csv

      # 7. Commit and push CSVs back to main branch
      - name: Commit and push CSVs
        id: git-commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add pub_locations
          if git diff --cached --quiet; then
            echo "no_changes=true" >> $GITHUB_ENV
          else
            git commit -m "Update CSVs [skip ci]"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git main
            echo "no_changes=false" >> $GITHUB_ENV

      # 8. Tag @fred-cook in a comment if there are CSV changes
      - name: Tag @fred-cook in a comment
        if: env.no_changes == 'false'
        run: |
          COMMENT="Hi @fred-cook, the Bass Map CSVs have been updated. Please review the changes."
          # Get the latest commit SHA
          LATEST_COMMIT=$(git rev-parse HEAD)
          # Post a comment on the commit
          gh api repos/${{ github.repository }}/commits/$LATEST_COMMIT/comments \
            -f body="$COMMENT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
